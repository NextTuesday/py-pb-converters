# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: map.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='map.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\tmap.proto\"\x1d\n\x01\x43\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\"G\n\x01M\x12\x14\n\x01\x64\x18\x01 \x03(\x0b\x32\t.M.DEntry\x1a,\n\x06\x44\x45ntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\x11\n\x05value\x18\x02 \x01(\x0b\x32\x02.C:\x02\x38\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_C = _descriptor.Descriptor(
  name='C',
  full_name='C',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='C.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='C.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13,
  serialized_end=42,
)


_M_DENTRY = _descriptor.Descriptor(
  name='DEntry',
  full_name='M.DEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='M.DEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='M.DEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=115,
)

_M = _descriptor.Descriptor(
  name='M',
  full_name='M',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='d', full_name='M.d', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_M_DENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=115,
)

_M_DENTRY.fields_by_name['value'].message_type = _C
_M_DENTRY.containing_type = _M
_M.fields_by_name['d'].message_type = _M_DENTRY
DESCRIPTOR.message_types_by_name['C'] = _C
DESCRIPTOR.message_types_by_name['M'] = _M

C = _reflection.GeneratedProtocolMessageType('C', (_message.Message,), dict(
  DESCRIPTOR = _C,
  __module__ = 'map_pb2'
  # @@protoc_insertion_point(class_scope:C)
  ))
_sym_db.RegisterMessage(C)

M = _reflection.GeneratedProtocolMessageType('M', (_message.Message,), dict(

  DEntry = _reflection.GeneratedProtocolMessageType('DEntry', (_message.Message,), dict(
    DESCRIPTOR = _M_DENTRY,
    __module__ = 'map_pb2'
    # @@protoc_insertion_point(class_scope:M.DEntry)
    ))
  ,
  DESCRIPTOR = _M,
  __module__ = 'map_pb2'
  # @@protoc_insertion_point(class_scope:M)
  ))
_sym_db.RegisterMessage(M)
_sym_db.RegisterMessage(M.DEntry)


_M_DENTRY.has_options = True
_M_DENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
